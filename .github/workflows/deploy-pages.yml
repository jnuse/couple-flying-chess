# .github/workflows/deploy-pages.yml

name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. 拉取你的仓库代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 设置 pnpm 环境
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest

      # 3. 设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      # 4. 安装项目依赖
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 5. ✨ 智能魔法第一重：自动查找并修改 Next.js 配置 ✨
      - name: Intelligently modify Next.js config for static export
        run: |
          CONFIG_FILE=""
          if [ -f "next.config.mjs" ]; then
            CONFIG_FILE="next.config.mjs"
          elif [ -f "next.config.js" ]; then
            CONFIG_FILE="next.config.js"
          fi

          if [ -n "$CONFIG_FILE" ]; then
            echo "Found Next.js config file: $CONFIG_FILE"
            sed -i 's/output: "standalone"/output: "export"/' "$CONFIG_FILE"
            echo "--- Modified $CONFIG_FILE for deployment ---"
            cat "$CONFIG_FILE"
          else
            echo "Error: Could not find next.config.mjs or next.config.js"
            exit 1
          fi

      # 6. ✨ 终极魔法：自动静态化所有动态路由 ✨
      #    这个脚本会查找所有需要处理的路由文件并自动添加配置
      - name: Make all dynamic routes compatible with static export
        run: |
          echo "Searching for route files to make static..."
          find ./app -type f \( -name "route.ts" -o -name "route.js" -o -name "sitemap.ts" -o -name "sitemap.js" -o -name "robots.ts" -o -name "robots.js" \) | while read -r file; do
            if [ -f "$file" ]; then
              echo "--- Modifying $file ---"
              # 在文件第一行插入 'export const dynamic = "force-static";'
              sed -i '1i export const dynamic = "force-static";' "$file"
              cat "$file"
              echo "-------------------------"
            fi
          done

      # 7. 构建静态站点 (这次，我们将见证成功！)
      - name: Build static site
        run: pnpm build

      # 8. 配置 GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # 9. 上传构建好的静态文件
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './out'

      # 10. 部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
